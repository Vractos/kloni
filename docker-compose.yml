version: "3.8"

services:
  kloni:
    container_name: kloni-server
    build: .
    image: kloni-server
    # logging:
    #   driver: loki
    #   options:
    #     loki-url: ${LOKI_URL}
    ports:
      - 8080:80
    environment:
      - APP_ENV=development
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB_NAME=${POSTGRES_DB_NAME}
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - MELI_APP_ID=${MELI_APP_ID}
      - MELI_SECRET_KEY=${MELI_SECRET_KEY}
      - MELI_REDIRECT_URL=${MELI_REDIRECT_URL}
      - MELI_ENDPOINT=${MELI_ENDPOINT}
      - ORDER_QUEUE_URL=${ORDER_QUEUE_URL}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ~/.aws:/root/.aws
    depends_on:
      - postgres
      - redis
  postgres:
    container_name: postgres
    image: postgres:14.5
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./ops/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    depends_on:
      - postgres
    ports:
      - 5050:80
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/var/lib/pgadmin

  redis:
    container_name: redis
    image: redis:6.2
    ports:
      - 6379:6379
  redisinsight:
    container_name: redisinsight
    image: redislabs/redisinsight:latest
    ports:
      - 5540:5540
    volumes:
      - redisinsight:/db

volumes:
  postgres_data:
  pgadmin:
  redisinsight:
